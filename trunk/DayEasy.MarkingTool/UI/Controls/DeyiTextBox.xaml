<Canvas
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" mc:Ignorable="d" x:Class="DayEasy.MarkingTool.UI.Controls.DeyiTextBox"
    Height="40">
	<Canvas.Resources>
<!-- Simple Button - 此控件用于根据每种状态设置画笔。请注意，这些画笔必须已在上面列出，因为它们是静态资源 -->
		<Style x:Key="dropDownBtn" TargetType="{x:Type Button}" BasedOn="{x:Null}">
			<Setter Property="FocusVisualStyle" Value="{DynamicResource SimpleButtonFocusVisual}"/>
			<Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
			<Setter Property="Cursor" Value="Hand"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
					
					<!-- 我们将 Grid 用作根，原因在于这便于添加更多的元素来自定义按钮 -->
						<Grid x:Name="Grid">
						
							<!-- Content Presenter 是控件放置文本内容等项之处 -->
						<!-- 通过利用绑定，无需编辑模板即可将控件参数化 -->
							<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" OpacityMask="White"/>
							<Border x:Name="Border" BorderThickness="0" Padding="{TemplateBinding Padding}" Background="White" BorderBrush="#FFDEDEDE" CornerRadius="1" Margin="-1,0.969,1,1.031" d:CopyToken="568f73df-a60f-4881-9344-65dd39eb5c51">
								<ed:RegularPolygon x:Name="regularPolygon" Fill="#FFCBCBCB" Height="Auto" InnerRadius="1" Margin="10.792,14,11.208,14" PointCount="3" Stretch="Fill" Stroke="Black" StrokeThickness="0" Width="Auto" RenderTransformOrigin="0.5,0.5">
									<ed:RegularPolygon.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform Angle="180"/>
											<TranslateTransform/>
										</TransformGroup>
									</ed:RegularPolygon.RenderTransform>
								</ed:RegularPolygon>
							</Border>
						</Grid>
					
					<!--每种状态都基于模板中的 Border 来设置画笔 -->
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="IsDefault" Value="False"/>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="OpacityMask" TargetName="contentPresenter" Value="White"/>
								<Setter Property="Fill" TargetName="regularPolygon" Value="#FF878787"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Fill" TargetName="regularPolygon" Value="#FF787878"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
								<Setter Property="Fill" TargetName="regularPolygon" Value="#FFE2E2E2"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	
	</Canvas.Resources>
    <Label x:Name="TextPlace" Style="{DynamicResource Common-TextPlace}" Content="请输入内容..." Foreground="Gainsboro"/>
	<TextBox x:Name="InputBox" Style="{DynamicResource Common-InputText}" Opacity="1" BorderThickness="1"/>
    <Button x:Name="BtnHistory" Style="{DynamicResource dropDownBtn}" BorderBrush="#FFDEDEDE" Background="White" Canvas.Right="0" Margin="0" Width="36" Height="40" BorderThickness="0,1,1,1"/>
	<ListBox x:Name="ListView" Style="{DynamicResource Default-Style-NumList}" SelectionMode="Single" Visibility="Hidden"/>
</Canvas>