//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Deyi.Tool.PaperServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HomeworkStruct", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class HomeworkStruct : Deyi.Tool.PaperServiceReference.PaperBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MarkingByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Deyi.Tool.PaperServiceReference.MarkingRank MarkingRankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.QuestionRef> QuestionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalMistakeCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalQuestionCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Batch {
            get {
                return this.BatchField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchField, value) != true)) {
                    this.BatchField = value;
                    this.RaisePropertyChanged("Batch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MarkingBy {
            get {
                return this.MarkingByField;
            }
            set {
                if ((this.MarkingByField.Equals(value) != true)) {
                    this.MarkingByField = value;
                    this.RaisePropertyChanged("MarkingBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Deyi.Tool.PaperServiceReference.MarkingRank MarkingRank {
            get {
                return this.MarkingRankField;
            }
            set {
                if ((this.MarkingRankField.Equals(value) != true)) {
                    this.MarkingRankField = value;
                    this.RaisePropertyChanged("MarkingRank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.QuestionRef> Questions {
            get {
                return this.QuestionsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionsField, value) != true)) {
                    this.QuestionsField = value;
                    this.RaisePropertyChanged("Questions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalMistakeCount {
            get {
                return this.TotalMistakeCountField;
            }
            set {
                if ((this.TotalMistakeCountField.Equals(value) != true)) {
                    this.TotalMistakeCountField = value;
                    this.RaisePropertyChanged("TotalMistakeCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalQuestionCount {
            get {
                return this.TotalQuestionCountField;
            }
            set {
                if ((this.TotalQuestionCountField.Equals(value) != true)) {
                    this.TotalQuestionCountField = value;
                    this.RaisePropertyChanged("TotalQuestionCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaperBase", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Deyi.Tool.PaperServiceReference.PaperEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Deyi.Tool.PaperServiceReference.PaperDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Deyi.Tool.PaperServiceReference.HomeworkStruct))]
    public partial class PaperBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPublicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Deyi.Tool.PaperServiceReference.PaperSource SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SubjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Deyi.Tool.PaperServiceReference.PaperType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedAt {
            get {
                return this.AddedAtField;
            }
            set {
                if ((this.AddedAtField.Equals(value) != true)) {
                    this.AddedAtField = value;
                    this.RaisePropertyChanged("AddedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublic {
            get {
                return this.IsPublicField;
            }
            set {
                if ((this.IsPublicField.Equals(value) != true)) {
                    this.IsPublicField = value;
                    this.RaisePropertyChanged("IsPublic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Deyi.Tool.PaperServiceReference.PaperSource Source {
            get {
                return this.SourceField;
            }
            set {
                if ((this.SourceField.Equals(value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte SubjectID {
            get {
                return this.SubjectIDField;
            }
            set {
                if ((this.SubjectIDField.Equals(value) != true)) {
                    this.SubjectIDField = value;
                    this.RaisePropertyChanged("SubjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Deyi.Tool.PaperServiceReference.PaperType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaperEntity", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class PaperEntity : Deyi.Tool.PaperServiceReference.PaperBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.PaperSection> SectionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.PaperSection> Sections {
            get {
                return this.SectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SectionsField, value) != true)) {
                    this.SectionsField = value;
                    this.RaisePropertyChanged("Sections");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaperDetail", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class PaperDetail : Deyi.Tool.PaperServiceReference.PaperBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.PaperSectionDetail> SectionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.PaperSectionDetail> Sections {
            get {
                return this.SectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SectionsField, value) != true)) {
                    this.SectionsField = value;
                    this.RaisePropertyChanged("Sections");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaperSource", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    public enum PaperSource : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unkown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Web = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Andriod = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IOS = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaperType", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    public enum PaperType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Homewrok = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Microtest = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarkingRank", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    public enum MarkingRank : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Excellent = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Good = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medium = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bad = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unspecified = 0,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionRef", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class QuestionRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid NextIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PervIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid NextID {
            get {
                return this.NextIDField;
            }
            set {
                if ((this.NextIDField.Equals(value) != true)) {
                    this.NextIDField = value;
                    this.RaisePropertyChanged("NextID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PervID {
            get {
                return this.PervIDField;
            }
            set {
                if ((this.PervIDField.Equals(value) != true)) {
                    this.PervIDField = value;
                    this.RaisePropertyChanged("PervID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaperSection", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class PaperSection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.QuestionRef> QuestionRefsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.QuestionRef> QuestionRefs {
            get {
                return this.QuestionRefsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionRefsField, value) != true)) {
                    this.QuestionRefsField = value;
                    this.RaisePropertyChanged("QuestionRefs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaperSectionDetail", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class PaperSectionDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.QuestionEntity> QuestionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.QuestionEntity> Questions {
            get {
                return this.QuestionsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionsField, value) != true)) {
                    this.QuestionsField = value;
                    this.RaisePropertyChanged("Questions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionEntity", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Question.Entity")]
    [System.SerializableAttribute()]
    public partial class QuestionEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Deyi.Tool.PaperServiceReference.QuestionBase BaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.Detail> DetailListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Deyi.Tool.PaperServiceReference.QuestionBase Base {
            get {
                return this.BaseField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseField, value) != true)) {
                    this.BaseField = value;
                    this.RaisePropertyChanged("Base");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.Detail> DetailList {
            get {
                return this.DetailListField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailListField, value) != true)) {
                    this.DetailListField = value;
                    this.RaisePropertyChanged("DetailList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionBase", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Question.Entity")]
    [System.SerializableAttribute()]
    public partial class QuestionBase : Deyi.Tool.PaperServiceReference.QuestionPorperty {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSchoolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<System.Guid> KnowledgePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TypeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSchool {
            get {
                return this.IsSchoolField;
            }
            set {
                if ((this.IsSchoolField.Equals(value) != true)) {
                    this.IsSchoolField = value;
                    this.RaisePropertyChanged("IsSchool");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.Generic.List<System.Guid> KnowledgePoint {
            get {
                return this.KnowledgePointField;
            }
            set {
                if ((object.ReferenceEquals(this.KnowledgePointField, value) != true)) {
                    this.KnowledgePointField = value;
                    this.RaisePropertyChanged("KnowledgePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryField, value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((this.TypeIDField.Equals(value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Detail", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Question.Entity")]
    [System.SerializableAttribute()]
    public partial class Detail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.Answer> AnswerListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Deyi.Tool.PaperServiceReference.DetailBase BaseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.Answer> AnswerList {
            get {
                return this.AnswerListField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerListField, value) != true)) {
                    this.AnswerListField = value;
                    this.RaisePropertyChanged("AnswerList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Deyi.Tool.PaperServiceReference.DetailBase Base {
            get {
                return this.BaseField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseField, value) != true)) {
                    this.BaseField = value;
                    this.RaisePropertyChanged("Base");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionElement", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Question.Entity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Deyi.Tool.PaperServiceReference.Answer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Deyi.Tool.PaperServiceReference.DetailBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Deyi.Tool.PaperServiceReference.QuestionPorperty))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Deyi.Tool.PaperServiceReference.QuestionBase))]
    public partial class QuestionElement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Answer", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Question.Entity")]
    [System.SerializableAttribute()]
    public partial class Answer : Deyi.Tool.PaperServiceReference.QuestionElement {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCorrectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SortField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DetailID {
            get {
                return this.DetailIDField;
            }
            set {
                if ((this.DetailIDField.Equals(value) != true)) {
                    this.DetailIDField = value;
                    this.RaisePropertyChanged("DetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCorrect {
            get {
                return this.IsCorrectField;
            }
            set {
                if ((this.IsCorrectField.Equals(value) != true)) {
                    this.IsCorrectField = value;
                    this.RaisePropertyChanged("IsCorrect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Sort {
            get {
                return this.SortField;
            }
            set {
                if ((this.SortField.Equals(value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DetailBase", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Question.Entity")]
    [System.SerializableAttribute()]
    public partial class DetailBase : Deyi.Tool.PaperServiceReference.QuestionElement {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsObjectiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SortField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsObjective {
            get {
                return this.IsObjectiveField;
            }
            set {
                if ((this.IsObjectiveField.Equals(value) != true)) {
                    this.IsObjectiveField = value;
                    this.RaisePropertyChanged("IsObjective");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionID {
            get {
                return this.QuestionIDField;
            }
            set {
                if ((this.QuestionIDField.Equals(value) != true)) {
                    this.QuestionIDField = value;
                    this.RaisePropertyChanged("QuestionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Sort {
            get {
                return this.SortField;
            }
            set {
                if ((this.SortField.Equals(value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionPorperty", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Question.Entity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Deyi.Tool.PaperServiceReference.QuestionBase))]
    public partial class QuestionPorperty : Deyi.Tool.PaperServiceReference.QuestionElement {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ChapterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChapterNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Deyi.Tool.PaperServiceReference.QuestionDifficulty DifficultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EntireVersionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ErrorRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Deyi.Tool.PaperServiceReference.SharedRange RangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SchoolGradeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SchoolStageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SchoolTermIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SubjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UsedCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.DateTime AddedAt {
            get {
                return this.AddedAtField;
            }
            set {
                if ((this.AddedAtField.Equals(value) != true)) {
                    this.AddedAtField = value;
                    this.RaisePropertyChanged("AddedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Guid ChapterID {
            get {
                return this.ChapterIDField;
            }
            set {
                if ((this.ChapterIDField.Equals(value) != true)) {
                    this.ChapterIDField = value;
                    this.RaisePropertyChanged("ChapterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ChapterName {
            get {
                return this.ChapterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChapterNameField, value) != true)) {
                    this.ChapterNameField = value;
                    this.RaisePropertyChanged("ChapterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Deyi.Tool.PaperServiceReference.QuestionDifficulty Difficulty {
            get {
                return this.DifficultyField;
            }
            set {
                if ((this.DifficultyField.Equals(value) != true)) {
                    this.DifficultyField = value;
                    this.RaisePropertyChanged("Difficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntireVersionID {
            get {
                return this.EntireVersionIDField;
            }
            set {
                if ((this.EntireVersionIDField.Equals(value) != true)) {
                    this.EntireVersionIDField = value;
                    this.RaisePropertyChanged("EntireVersionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public byte ErrorRate {
            get {
                return this.ErrorRateField;
            }
            set {
                if ((this.ErrorRateField.Equals(value) != true)) {
                    this.ErrorRateField = value;
                    this.RaisePropertyChanged("ErrorRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Deyi.Tool.PaperServiceReference.SharedRange Range {
            get {
                return this.RangeField;
            }
            set {
                if ((this.RangeField.Equals(value) != true)) {
                    this.RangeField = value;
                    this.RaisePropertyChanged("Range");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public byte SchoolGradeID {
            get {
                return this.SchoolGradeIDField;
            }
            set {
                if ((this.SchoolGradeIDField.Equals(value) != true)) {
                    this.SchoolGradeIDField = value;
                    this.RaisePropertyChanged("SchoolGradeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public byte SchoolStageID {
            get {
                return this.SchoolStageIDField;
            }
            set {
                if ((this.SchoolStageIDField.Equals(value) != true)) {
                    this.SchoolStageIDField = value;
                    this.RaisePropertyChanged("SchoolStageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public byte SchoolTermID {
            get {
                return this.SchoolTermIDField;
            }
            set {
                if ((this.SchoolTermIDField.Equals(value) != true)) {
                    this.SchoolTermIDField = value;
                    this.RaisePropertyChanged("SchoolTermID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte SubjectID {
            get {
                return this.SubjectIDField;
            }
            set {
                if ((this.SubjectIDField.Equals(value) != true)) {
                    this.SubjectIDField = value;
                    this.RaisePropertyChanged("SubjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int UsedCount {
            get {
                return this.UsedCountField;
            }
            set {
                if ((this.UsedCountField.Equals(value) != true)) {
                    this.UsedCountField = value;
                    this.RaisePropertyChanged("UsedCount");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionDifficulty", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Question.Entity")]
    public enum QuestionDifficulty : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Level0 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Level1 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Level2 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Level3 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Level4 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Level5 = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="SharedRange", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Question.Entity")]
    public enum SharedRange : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Oneself = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        School = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherSchool = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarkingDetail", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class MarkingDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCorrectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.MarkingSymbolInfo> MarkingSymbolsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long QuestionVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudentAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudentAnswerSnapshotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.TeacherCommentInfo> TeacherCommentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCorrect {
            get {
                return this.IsCorrectField;
            }
            set {
                if ((this.IsCorrectField.Equals(value) != true)) {
                    this.IsCorrectField = value;
                    this.RaisePropertyChanged("IsCorrect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.MarkingSymbolInfo> MarkingSymbols {
            get {
                return this.MarkingSymbolsField;
            }
            set {
                if ((object.ReferenceEquals(this.MarkingSymbolsField, value) != true)) {
                    this.MarkingSymbolsField = value;
                    this.RaisePropertyChanged("MarkingSymbols");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionID {
            get {
                return this.QuestionIDField;
            }
            set {
                if ((this.QuestionIDField.Equals(value) != true)) {
                    this.QuestionIDField = value;
                    this.RaisePropertyChanged("QuestionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long QuestionVersion {
            get {
                return this.QuestionVersionField;
            }
            set {
                if ((this.QuestionVersionField.Equals(value) != true)) {
                    this.QuestionVersionField = value;
                    this.RaisePropertyChanged("QuestionVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentAnswer {
            get {
                return this.StudentAnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentAnswerField, value) != true)) {
                    this.StudentAnswerField = value;
                    this.RaisePropertyChanged("StudentAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentAnswerSnapshot {
            get {
                return this.StudentAnswerSnapshotField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentAnswerSnapshotField, value) != true)) {
                    this.StudentAnswerSnapshotField = value;
                    this.RaisePropertyChanged("StudentAnswerSnapshot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.TeacherCommentInfo> TeacherComments {
            get {
                return this.TeacherCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.TeacherCommentsField, value) != true)) {
                    this.TeacherCommentsField = value;
                    this.RaisePropertyChanged("TeacherComments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarkingSymbolInfo", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class MarkingSymbolInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Drawing.Point PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Deyi.Tool.PaperServiceReference.MarkingSymbolType SymbolTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Drawing.Point Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Deyi.Tool.PaperServiceReference.MarkingSymbolType SymbolType {
            get {
                return this.SymbolTypeField;
            }
            set {
                if ((this.SymbolTypeField.Equals(value) != true)) {
                    this.SymbolTypeField = value;
                    this.RaisePropertyChanged("SymbolType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TeacherCommentInfo", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class TeacherCommentInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Drawing.Point PositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentText {
            get {
                return this.CommentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentTextField, value) != true)) {
                    this.CommentTextField = value;
                    this.RaisePropertyChanged("CommentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Drawing.Point Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarkingSymbolType", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    public enum MarkingSymbolType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Circle = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Right = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wrong = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultPacket", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.Framework")]
    [System.SerializableAttribute()]
    public partial class ResultPacket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsError {
            get {
                return this.IsErrorField;
            }
            set {
                if ((this.IsErrorField.Equals(value) != true)) {
                    this.IsErrorField = value;
                    this.RaisePropertyChanged("IsError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaperFeed", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class PaperFeed : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLoadFormulaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPublicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedAt {
            get {
                return this.AddedAtField;
            }
            set {
                if ((this.AddedAtField.Equals(value) != true)) {
                    this.AddedAtField = value;
                    this.RaisePropertyChanged("AddedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLoadFormula {
            get {
                return this.IsLoadFormulaField;
            }
            set {
                if ((this.IsLoadFormulaField.Equals(value) != true)) {
                    this.IsLoadFormulaField = value;
                    this.RaisePropertyChanged("IsLoadFormula");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublic {
            get {
                return this.IsPublicField;
            }
            set {
                if ((this.IsPublicField.Equals(value) != true)) {
                    this.IsPublicField = value;
                    this.RaisePropertyChanged("IsPublic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubjectName {
            get {
                return this.SubjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectNameField, value) != true)) {
                    this.SubjectNameField = value;
                    this.RaisePropertyChanged("SubjectName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarkingResult", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class MarkingResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddedIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.MarkingDetail> DetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFinishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MarkingByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PaperIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudentIdentityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedAt {
            get {
                return this.AddedAtField;
            }
            set {
                if ((this.AddedAtField.Equals(value) != true)) {
                    this.AddedAtField = value;
                    this.RaisePropertyChanged("AddedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddedIP {
            get {
                return this.AddedIPField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedIPField, value) != true)) {
                    this.AddedIPField = value;
                    this.RaisePropertyChanged("AddedIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Batch {
            get {
                return this.BatchField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchField, value) != true)) {
                    this.BatchField = value;
                    this.RaisePropertyChanged("Batch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.MarkingDetail> Detail {
            get {
                return this.DetailField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailField, value) != true)) {
                    this.DetailField = value;
                    this.RaisePropertyChanged("Detail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFinished {
            get {
                return this.IsFinishedField;
            }
            set {
                if ((this.IsFinishedField.Equals(value) != true)) {
                    this.IsFinishedField = value;
                    this.RaisePropertyChanged("IsFinished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MarkingBy {
            get {
                return this.MarkingByField;
            }
            set {
                if ((this.MarkingByField.Equals(value) != true)) {
                    this.MarkingByField = value;
                    this.RaisePropertyChanged("MarkingBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PaperID {
            get {
                return this.PaperIDField;
            }
            set {
                if ((this.PaperIDField.Equals(value) != true)) {
                    this.PaperIDField = value;
                    this.RaisePropertyChanged("PaperID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentIdentity {
            get {
                return this.StudentIdentityField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentIdentityField, value) != true)) {
                    this.StudentIdentityField = value;
                    this.RaisePropertyChanged("StudentIdentity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalScore {
            get {
                return this.TotalScoreField;
            }
            set {
                if ((this.TotalScoreField.Equals(value) != true)) {
                    this.TotalScoreField = value;
                    this.RaisePropertyChanged("TotalScore");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaperUsage", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Deyi.Tool.PaperServiceReference.PaperBatchDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Deyi.Tool.PaperServiceReference.MicroTestUsage))]
    public partial class PaperUsage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddedIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BatchNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CalculateScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpireTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PaperIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SubjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedAt {
            get {
                return this.AddedAtField;
            }
            set {
                if ((this.AddedAtField.Equals(value) != true)) {
                    this.AddedAtField = value;
                    this.RaisePropertyChanged("AddedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddedIP {
            get {
                return this.AddedIPField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedIPField, value) != true)) {
                    this.AddedIPField = value;
                    this.RaisePropertyChanged("AddedIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BatchNo {
            get {
                return this.BatchNoField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchNoField, value) != true)) {
                    this.BatchNoField = value;
                    this.RaisePropertyChanged("BatchNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CalculateScore {
            get {
                return this.CalculateScoreField;
            }
            set {
                if ((this.CalculateScoreField.Equals(value) != true)) {
                    this.CalculateScoreField = value;
                    this.RaisePropertyChanged("CalculateScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpireTime {
            get {
                return this.ExpireTimeField;
            }
            set {
                if ((this.ExpireTimeField.Equals(value) != true)) {
                    this.ExpireTimeField = value;
                    this.RaisePropertyChanged("ExpireTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PaperID {
            get {
                return this.PaperIDField;
            }
            set {
                if ((this.PaperIDField.Equals(value) != true)) {
                    this.PaperIDField = value;
                    this.RaisePropertyChanged("PaperID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte SubjectID {
            get {
                return this.SubjectIDField;
            }
            set {
                if ((this.SubjectIDField.Equals(value) != true)) {
                    this.SubjectIDField = value;
                    this.RaisePropertyChanged("SubjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaperBatchDetail", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class PaperBatchDetail : Deyi.Tool.PaperServiceReference.PaperUsage {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.PaperSectionDetail> SectionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.PaperSectionDetail> Sections {
            get {
                return this.SectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SectionsField, value) != true)) {
                    this.SectionsField = value;
                    this.RaisePropertyChanged("Sections");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MicroTestUsage", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class MicroTestUsage : Deyi.Tool.PaperServiceReference.PaperUsage {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<long> ClassIDsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<long> ClassIDs {
            get {
                return this.ClassIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassIDsField, value) != true)) {
                    this.ClassIDsField = value;
                    this.RaisePropertyChanged("ClassIDs");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lesson", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class Lesson : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SubjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TeacherIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DayOfWeek WeekField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClassID {
            get {
                return this.ClassIDField;
            }
            set {
                if ((this.ClassIDField.Equals(value) != true)) {
                    this.ClassIDField = value;
                    this.RaisePropertyChanged("ClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Sort {
            get {
                return this.SortField;
            }
            set {
                if ((this.SortField.Equals(value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte SubjectID {
            get {
                return this.SubjectIDField;
            }
            set {
                if ((this.SubjectIDField.Equals(value) != true)) {
                    this.SubjectIDField = value;
                    this.RaisePropertyChanged("SubjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TeacherID {
            get {
                return this.TeacherIDField;
            }
            set {
                if ((this.TeacherIDField.Equals(value) != true)) {
                    this.TeacherIDField = value;
                    this.RaisePropertyChanged("TeacherID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DayOfWeek Week {
            get {
                return this.WeekField;
            }
            set {
                if ((this.WeekField.Equals(value) != true)) {
                    this.WeekField = value;
                    this.RaisePropertyChanged("Week");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionStatus", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class QuestionStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BigSortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SamllSortField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BigSort {
            get {
                return this.BigSortField;
            }
            set {
                if ((this.BigSortField.Equals(value) != true)) {
                    this.BigSortField = value;
                    this.RaisePropertyChanged("BigSort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCount {
            get {
                return this.ErrorCountField;
            }
            set {
                if ((this.ErrorCountField.Equals(value) != true)) {
                    this.ErrorCountField = value;
                    this.RaisePropertyChanged("ErrorCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionID {
            get {
                return this.QuestionIDField;
            }
            set {
                if ((this.QuestionIDField.Equals(value) != true)) {
                    this.QuestionIDField = value;
                    this.RaisePropertyChanged("QuestionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SamllSort {
            get {
                return this.SamllSortField;
            }
            set {
                if ((this.SamllSortField.Equals(value) != true)) {
                    this.SamllSortField = value;
                    this.RaisePropertyChanged("SamllSort");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorCountStatus", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class ErrorCountStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StudentCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCount {
            get {
                return this.ErrorCountField;
            }
            set {
                if ((this.ErrorCountField.Equals(value) != true)) {
                    this.ErrorCountField = value;
                    this.RaisePropertyChanged("ErrorCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudentCount {
            get {
                return this.StudentCountField;
            }
            set {
                if ((this.StudentCountField.Equals(value) != true)) {
                    this.StudentCountField = value;
                    this.RaisePropertyChanged("StudentCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatsData", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Question.Entity")]
    [System.SerializableAttribute()]
    public partial class StatsData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ErrorRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long QuestionVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte ErrorRate {
            get {
                return this.ErrorRateField;
            }
            set {
                if ((this.ErrorRateField.Equals(value) != true)) {
                    this.ErrorRateField = value;
                    this.RaisePropertyChanged("ErrorRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionID {
            get {
                return this.QuestionIDField;
            }
            set {
                if ((this.QuestionIDField.Equals(value) != true)) {
                    this.QuestionIDField = value;
                    this.RaisePropertyChanged("QuestionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long QuestionVersion {
            get {
                return this.QuestionVersionField;
            }
            set {
                if ((this.QuestionVersionField.Equals(value) != true)) {
                    this.QuestionVersionField = value;
                    this.RaisePropertyChanged("QuestionVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorQuestion", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class ErrorQuestion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Deyi.Tool.PaperServiceReference.QuestionDifficulty DifficultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ErrorAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ErrorRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid MarkingResultIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long QuestionVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Deyi.Tool.PaperServiceReference.QuestionDifficulty Difficulty {
            get {
                return this.DifficultyField;
            }
            set {
                if ((this.DifficultyField.Equals(value) != true)) {
                    this.DifficultyField = value;
                    this.RaisePropertyChanged("Difficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ErrorAt {
            get {
                return this.ErrorAtField;
            }
            set {
                if ((this.ErrorAtField.Equals(value) != true)) {
                    this.ErrorAtField = value;
                    this.RaisePropertyChanged("ErrorAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte ErrorRate {
            get {
                return this.ErrorRateField;
            }
            set {
                if ((this.ErrorRateField.Equals(value) != true)) {
                    this.ErrorRateField = value;
                    this.RaisePropertyChanged("ErrorRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid MarkingResultID {
            get {
                return this.MarkingResultIDField;
            }
            set {
                if ((this.MarkingResultIDField.Equals(value) != true)) {
                    this.MarkingResultIDField = value;
                    this.RaisePropertyChanged("MarkingResultID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionID {
            get {
                return this.QuestionIDField;
            }
            set {
                if ((this.QuestionIDField.Equals(value) != true)) {
                    this.QuestionIDField = value;
                    this.RaisePropertyChanged("QuestionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long QuestionVersion {
            get {
                return this.QuestionVersionField;
            }
            set {
                if ((this.QuestionVersionField.Equals(value) != true)) {
                    this.QuestionVersionField = value;
                    this.RaisePropertyChanged("QuestionVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((this.TypeIDField.Equals(value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaperSymbols", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class PaperSymbols : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.TeacherCommentInfo> MarkingCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.MarkingSymbolInfo> MarkingSymbolsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long QuestionVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.TeacherCommentInfo> MarkingComments {
            get {
                return this.MarkingCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.MarkingCommentsField, value) != true)) {
                    this.MarkingCommentsField = value;
                    this.RaisePropertyChanged("MarkingComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.MarkingSymbolInfo> MarkingSymbols {
            get {
                return this.MarkingSymbolsField;
            }
            set {
                if ((object.ReferenceEquals(this.MarkingSymbolsField, value) != true)) {
                    this.MarkingSymbolsField = value;
                    this.RaisePropertyChanged("MarkingSymbols");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionID {
            get {
                return this.QuestionIDField;
            }
            set {
                if ((this.QuestionIDField.Equals(value) != true)) {
                    this.QuestionIDField = value;
                    this.RaisePropertyChanged("QuestionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long QuestionVersion {
            get {
                return this.QuestionVersionField;
            }
            set {
                if ((this.QuestionVersionField.Equals(value) != true)) {
                    this.QuestionVersionField = value;
                    this.RaisePropertyChanged("QuestionVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MicrotestFeed", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class MicrotestFeed : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BatchNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpireTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PaperIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SubjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BatchNo {
            get {
                return this.BatchNoField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchNoField, value) != true)) {
                    this.BatchNoField = value;
                    this.RaisePropertyChanged("BatchNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClassID {
            get {
                return this.ClassIDField;
            }
            set {
                if ((this.ClassIDField.Equals(value) != true)) {
                    this.ClassIDField = value;
                    this.RaisePropertyChanged("ClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpireTime {
            get {
                return this.ExpireTimeField;
            }
            set {
                if ((this.ExpireTimeField.Equals(value) != true)) {
                    this.ExpireTimeField = value;
                    this.RaisePropertyChanged("ExpireTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PaperID {
            get {
                return this.PaperIDField;
            }
            set {
                if ((this.PaperIDField.Equals(value) != true)) {
                    this.PaperIDField = value;
                    this.RaisePropertyChanged("PaperID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte SubjectID {
            get {
                return this.SubjectIDField;
            }
            set {
                if ((this.SubjectIDField.Equals(value) != true)) {
                    this.SubjectIDField = value;
                    this.RaisePropertyChanged("SubjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MicrotestResult", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class MicrotestResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddedIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.StudentAnswer> AnswersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BatchNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedAt {
            get {
                return this.AddedAtField;
            }
            set {
                if ((this.AddedAtField.Equals(value) != true)) {
                    this.AddedAtField = value;
                    this.RaisePropertyChanged("AddedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddedIP {
            get {
                return this.AddedIPField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedIPField, value) != true)) {
                    this.AddedIPField = value;
                    this.RaisePropertyChanged("AddedIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.StudentAnswer> Answers {
            get {
                return this.AnswersField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswersField, value) != true)) {
                    this.AnswersField = value;
                    this.RaisePropertyChanged("Answers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BatchNo {
            get {
                return this.BatchNoField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchNoField, value) != true)) {
                    this.BatchNoField = value;
                    this.RaisePropertyChanged("BatchNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudentAnswer", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class StudentAnswer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.AnswerDetail> DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EntireVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCorrectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ResultIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SocreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.AnswerDetail> Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntireVersion {
            get {
                return this.EntireVersionField;
            }
            set {
                if ((this.EntireVersionField.Equals(value) != true)) {
                    this.EntireVersionField = value;
                    this.RaisePropertyChanged("EntireVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCorrect {
            get {
                return this.IsCorrectField;
            }
            set {
                if ((this.IsCorrectField.Equals(value) != true)) {
                    this.IsCorrectField = value;
                    this.RaisePropertyChanged("IsCorrect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionID {
            get {
                return this.QuestionIDField;
            }
            set {
                if ((this.QuestionIDField.Equals(value) != true)) {
                    this.QuestionIDField = value;
                    this.RaisePropertyChanged("QuestionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ResultID {
            get {
                return this.ResultIDField;
            }
            set {
                if ((this.ResultIDField.Equals(value) != true)) {
                    this.ResultIDField = value;
                    this.RaisePropertyChanged("ResultID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Socre {
            get {
                return this.SocreField;
            }
            set {
                if ((this.SocreField.Equals(value) != true)) {
                    this.SocreField = value;
                    this.RaisePropertyChanged("Socre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnswerDetail", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity")]
    [System.SerializableAttribute()]
    public partial class AnswerDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCorrectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SorceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StudentAnswerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCorrect {
            get {
                return this.IsCorrectField;
            }
            set {
                if ((this.IsCorrectField.Equals(value) != true)) {
                    this.IsCorrectField = value;
                    this.RaisePropertyChanged("IsCorrect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionDetailID {
            get {
                return this.QuestionDetailIDField;
            }
            set {
                if ((this.QuestionDetailIDField.Equals(value) != true)) {
                    this.QuestionDetailIDField = value;
                    this.RaisePropertyChanged("QuestionDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Sorce {
            get {
                return this.SorceField;
            }
            set {
                if ((this.SorceField.Equals(value) != true)) {
                    this.SorceField = value;
                    this.RaisePropertyChanged("Sorce");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StudentAnswerID {
            get {
                return this.StudentAnswerIDField;
            }
            set {
                if ((this.StudentAnswerIDField.Equals(value) != true)) {
                    this.StudentAnswerIDField = value;
                    this.RaisePropertyChanged("StudentAnswerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Statistics", Namespace="http://schemas.datacontract.org/2004/07/DayEZ.API.Paper.Entity.Microtest")]
    [System.SerializableAttribute()]
    public partial class Statistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Option {
            get {
                return this.OptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionField, value) != true)) {
                    this.OptionField = value;
                    this.RaisePropertyChanged("Option");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.dayez.net/", ConfigurationName="PaperServiceReference.Paper")]
    public interface Paper {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetHomeworksFromSpecifiedTimeOn", ReplyAction="http://www.dayez.net/Paper/GetHomeworksFromSpecifiedTimeOnResponse")]
        System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.HomeworkStruct> GetHomeworksFromSpecifiedTimeOn(System.DateTime time, byte subjectID, long userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetMarkingDetails", ReplyAction="http://www.dayez.net/Paper/GetMarkingDetailsResponse")]
        System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.MarkingDetail> GetMarkingDetails(long userID, System.Guid questionID, string batchNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetRecommendedAnswers", ReplyAction="http://www.dayez.net/Paper/GetRecommendedAnswersResponse")]
        System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.MarkingDetail> GetRecommendedAnswers(System.Guid questionID, string batchNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetUserPaperCreationCount", ReplyAction="http://www.dayez.net/Paper/GetUserPaperCreationCountResponse")]
        int GetUserPaperCreationCount(long userID, Deyi.Tool.PaperServiceReference.PaperType paperType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/CretePaper", ReplyAction="http://www.dayez.net/Paper/CretePaperResponse")]
        Deyi.Tool.PaperServiceReference.ResultPacket CretePaper(Deyi.Tool.PaperServiceReference.PaperEntity paper);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetPaperList4Page", ReplyAction="http://www.dayez.net/Paper/GetPaperList4PageResponse")]
        System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.PaperFeed> GetPaperList4Page(out int totalCount, int pageSize, int pageIndex, System.Collections.Generic.List<long> userIDs, Deyi.Tool.PaperServiceReference.PaperType type, System.Nullable<bool> isPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetPaperSection", ReplyAction="http://www.dayez.net/Paper/GetPaperSectionResponse")]
        Deyi.Tool.PaperServiceReference.PaperDetail GetPaperSection(System.Guid paperID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/ChangePaperSatus", ReplyAction="http://www.dayez.net/Paper/ChangePaperSatusResponse")]
        Deyi.Tool.PaperServiceReference.ResultPacket ChangePaperSatus(bool isPublic, System.Guid paperId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GeneratedMarkingResult", ReplyAction="http://www.dayez.net/Paper/GeneratedMarkingResultResponse")]
        Deyi.Tool.PaperServiceReference.ResultPacket GeneratedMarkingResult(Deyi.Tool.PaperServiceReference.MarkingResult markingResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GeneratedPaperUsage", ReplyAction="http://www.dayez.net/Paper/GeneratedPaperUsageResponse")]
        Deyi.Tool.PaperServiceReference.ResultPacket GeneratedPaperUsage(Deyi.Tool.PaperServiceReference.PaperUsage usage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetPaperBatchDetail", ReplyAction="http://www.dayez.net/Paper/GetPaperBatchDetailResponse")]
        Deyi.Tool.PaperServiceReference.PaperBatchDetail GetPaperBatchDetail(string batchNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GeneratedMarkingResults", ReplyAction="http://www.dayez.net/Paper/GeneratedMarkingResultsResponse")]
        Deyi.Tool.PaperServiceReference.ResultPacket GeneratedMarkingResults(System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.MarkingResult> markingResults);
        
        // CODEGEN: 操作 UploadFile 以后生成的消息协定不是 RPC，也不是换行文档。
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/UploadFile", ReplyAction="http://www.dayez.net/Paper/UploadFileResponse")]
        Deyi.Tool.PaperServiceReference.UploadFileResponse UploadFile(Deyi.Tool.PaperServiceReference.PaperMarkingFileData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetLessons", ReplyAction="http://www.dayez.net/Paper/GetLessonsResponse")]
        System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.Lesson> GetLessons(long id, bool isTeacher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/RemarkedLesson", ReplyAction="http://www.dayez.net/Paper/RemarkedLessonResponse")]
        Deyi.Tool.PaperServiceReference.ResultPacket RemarkedLesson(System.Guid lessonId, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetTeacherUsedPaperList", ReplyAction="http://www.dayez.net/Paper/GetTeacherUsedPaperListResponse")]
        System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.PaperUsage> GetTeacherUsedPaperList(out int totalCount, long userId, int pageSize, int pageIndex, Deyi.Tool.PaperServiceReference.PaperType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/Status4Question", ReplyAction="http://www.dayez.net/Paper/Status4QuestionResponse")]
        System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.QuestionStatus> Status4Question(out int totalCount, System.Collections.Generic.List<string> studentIds, string batchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/Status4ErrorStudentCount", ReplyAction="http://www.dayez.net/Paper/Status4ErrorStudentCountResponse")]
        System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.ErrorCountStatus> Status4ErrorStudentCount(System.Collections.Generic.List<string> studentIds, string batchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetStudentByErrorCount", ReplyAction="http://www.dayez.net/Paper/GetStudentByErrorCountResponse")]
        System.Collections.Generic.List<string> GetStudentByErrorCount(System.Collections.Generic.List<string> studentIds, string batchCode, int errorCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetStudentIDByQuestionID", ReplyAction="http://www.dayez.net/Paper/GetStudentIDByQuestionIDResponse")]
        System.Collections.Generic.List<string> GetStudentIDByQuestionID(System.Collections.Generic.List<string> studentIds, string batchCode, System.Guid questionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/QuestionWholeStats", ReplyAction="http://www.dayez.net/Paper/QuestionWholeStatsResponse")]
        System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.StatsData> QuestionWholeStats(int hours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetErrorQuestion", ReplyAction="http://www.dayez.net/Paper/GetErrorQuestionResponse")]
        System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.ErrorQuestion> GetErrorQuestion(out int totalCount, string studentID, int pageSize, int pageIndex, byte subjectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetPaperMarkSymbols", ReplyAction="http://www.dayez.net/Paper/GetPaperMarkSymbolsResponse")]
        System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.PaperSymbols> GetPaperMarkSymbols(out string dircetoryName, System.Guid markingResultID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/OpenMicrotest", ReplyAction="http://www.dayez.net/Paper/OpenMicrotestResponse")]
        Deyi.Tool.PaperServiceReference.ResultPacket OpenMicrotest(Deyi.Tool.PaperServiceReference.MicroTestUsage mtu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/CloseMicrotest", ReplyAction="http://www.dayez.net/Paper/CloseMicrotestResponse")]
        Deyi.Tool.PaperServiceReference.ResultPacket CloseMicrotest(string batchNo, long classID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetUnderwayMicrotest", ReplyAction="http://www.dayez.net/Paper/GetUnderwayMicrotestResponse")]
        System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.MicrotestFeed> GetUnderwayMicrotest(out int totalCount, int pageSize, int pageIndex, long id, byte subjectID, bool isTeacher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetEndedMicrotest", ReplyAction="http://www.dayez.net/Paper/GetEndedMicrotestResponse")]
        System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.MicrotestFeed> GetEndedMicrotest(out int totalCount, int pageSize, int pageIndex, long id, byte subjectID, bool isTeacher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetStartAndEndedTime", ReplyAction="http://www.dayez.net/Paper/GetStartAndEndedTimeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="startTime")]
        System.DateTime GetStartAndEndedTime(out System.DateTime endedTime, string batchNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/HandInPaperOnline", ReplyAction="http://www.dayez.net/Paper/HandInPaperOnlineResponse")]
        Deyi.Tool.PaperServiceReference.ResultPacket HandInPaperOnline(Deyi.Tool.PaperServiceReference.MicrotestResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/CheckStudentIsHandIn", ReplyAction="http://www.dayez.net/Paper/CheckStudentIsHandInResponse")]
        bool CheckStudentIsHandIn(out byte totalScore, string batchNo, long studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetMicrotestStatistics", ReplyAction="http://www.dayez.net/Paper/GetMicrotestStatisticsResponse")]
        System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.Statistics> GetMicrotestStatistics(long classID, string batchNo, System.Guid detailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetStudentByAnswerInMicrotest", ReplyAction="http://www.dayez.net/Paper/GetStudentByAnswerInMicrotestResponse")]
        System.Collections.Generic.List<long> GetStudentByAnswerInMicrotest(string batchNo, long classID, System.Guid detailId, string answer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetStudentMicrotestResult", ReplyAction="http://www.dayez.net/Paper/GetStudentMicrotestResultResponse")]
        Deyi.Tool.PaperServiceReference.MicrotestResult GetStudentMicrotestResult(string batchNo, long studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dayez.net/Paper/GetStudentAnswerInMicrotest", ReplyAction="http://www.dayez.net/Paper/GetStudentAnswerInMicrotestResponse")]
        System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.AnswerDetail> GetStudentAnswerInMicrotest(string batchNo, long studentId);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PaperMarkingFileData", WrapperNamespace="http://www.dayez.net/", IsWrapped=true)]
    public partial class PaperMarkingFileData {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.dayez.net/")]
        public string DirectoryName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.dayez.net/")]
        public string Filename;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.dayez.net/", Order=0)]
        public System.IO.Stream Data;
        
        public PaperMarkingFileData() {
        }
        
        public PaperMarkingFileData(string DirectoryName, string Filename, System.IO.Stream Data) {
            this.DirectoryName = DirectoryName;
            this.Filename = Filename;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadFileResponse {
        
        public UploadFileResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PaperChannel : Deyi.Tool.PaperServiceReference.Paper, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PaperClient : System.ServiceModel.ClientBase<Deyi.Tool.PaperServiceReference.Paper>, Deyi.Tool.PaperServiceReference.Paper {
        
        public PaperClient() {
        }
        
        public PaperClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PaperClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaperClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaperClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.HomeworkStruct> GetHomeworksFromSpecifiedTimeOn(System.DateTime time, byte subjectID, long userID) {
            return base.Channel.GetHomeworksFromSpecifiedTimeOn(time, subjectID, userID);
        }
        
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.MarkingDetail> GetMarkingDetails(long userID, System.Guid questionID, string batchNo) {
            return base.Channel.GetMarkingDetails(userID, questionID, batchNo);
        }
        
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.MarkingDetail> GetRecommendedAnswers(System.Guid questionID, string batchNo) {
            return base.Channel.GetRecommendedAnswers(questionID, batchNo);
        }
        
        public int GetUserPaperCreationCount(long userID, Deyi.Tool.PaperServiceReference.PaperType paperType) {
            return base.Channel.GetUserPaperCreationCount(userID, paperType);
        }
        
        public Deyi.Tool.PaperServiceReference.ResultPacket CretePaper(Deyi.Tool.PaperServiceReference.PaperEntity paper) {
            return base.Channel.CretePaper(paper);
        }
        
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.PaperFeed> GetPaperList4Page(out int totalCount, int pageSize, int pageIndex, System.Collections.Generic.List<long> userIDs, Deyi.Tool.PaperServiceReference.PaperType type, System.Nullable<bool> isPublic) {
            return base.Channel.GetPaperList4Page(out totalCount, pageSize, pageIndex, userIDs, type, isPublic);
        }
        
        public Deyi.Tool.PaperServiceReference.PaperDetail GetPaperSection(System.Guid paperID) {
            return base.Channel.GetPaperSection(paperID);
        }
        
        public Deyi.Tool.PaperServiceReference.ResultPacket ChangePaperSatus(bool isPublic, System.Guid paperId) {
            return base.Channel.ChangePaperSatus(isPublic, paperId);
        }
        
        public Deyi.Tool.PaperServiceReference.ResultPacket GeneratedMarkingResult(Deyi.Tool.PaperServiceReference.MarkingResult markingResult) {
            return base.Channel.GeneratedMarkingResult(markingResult);
        }
        
        public Deyi.Tool.PaperServiceReference.ResultPacket GeneratedPaperUsage(Deyi.Tool.PaperServiceReference.PaperUsage usage) {
            return base.Channel.GeneratedPaperUsage(usage);
        }
        
        public Deyi.Tool.PaperServiceReference.PaperBatchDetail GetPaperBatchDetail(string batchNo) {
            return base.Channel.GetPaperBatchDetail(batchNo);
        }
        
        public Deyi.Tool.PaperServiceReference.ResultPacket GeneratedMarkingResults(System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.MarkingResult> markingResults) {
            return base.Channel.GeneratedMarkingResults(markingResults);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Deyi.Tool.PaperServiceReference.UploadFileResponse Deyi.Tool.PaperServiceReference.Paper.UploadFile(Deyi.Tool.PaperServiceReference.PaperMarkingFileData request) {
            return base.Channel.UploadFile(request);
        }
        
        public void UploadFile(string DirectoryName, string Filename, System.IO.Stream Data) {
            Deyi.Tool.PaperServiceReference.PaperMarkingFileData inValue = new Deyi.Tool.PaperServiceReference.PaperMarkingFileData();
            inValue.DirectoryName = DirectoryName;
            inValue.Filename = Filename;
            inValue.Data = Data;
            Deyi.Tool.PaperServiceReference.UploadFileResponse retVal = ((Deyi.Tool.PaperServiceReference.Paper)(this)).UploadFile(inValue);
        }
        
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.Lesson> GetLessons(long id, bool isTeacher) {
            return base.Channel.GetLessons(id, isTeacher);
        }
        
        public Deyi.Tool.PaperServiceReference.ResultPacket RemarkedLesson(System.Guid lessonId, string content) {
            return base.Channel.RemarkedLesson(lessonId, content);
        }
        
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.PaperUsage> GetTeacherUsedPaperList(out int totalCount, long userId, int pageSize, int pageIndex, Deyi.Tool.PaperServiceReference.PaperType type) {
            return base.Channel.GetTeacherUsedPaperList(out totalCount, userId, pageSize, pageIndex, type);
        }
        
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.QuestionStatus> Status4Question(out int totalCount, System.Collections.Generic.List<string> studentIds, string batchCode) {
            return base.Channel.Status4Question(out totalCount, studentIds, batchCode);
        }
        
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.ErrorCountStatus> Status4ErrorStudentCount(System.Collections.Generic.List<string> studentIds, string batchCode) {
            return base.Channel.Status4ErrorStudentCount(studentIds, batchCode);
        }
        
        public System.Collections.Generic.List<string> GetStudentByErrorCount(System.Collections.Generic.List<string> studentIds, string batchCode, int errorCount) {
            return base.Channel.GetStudentByErrorCount(studentIds, batchCode, errorCount);
        }
        
        public System.Collections.Generic.List<string> GetStudentIDByQuestionID(System.Collections.Generic.List<string> studentIds, string batchCode, System.Guid questionID) {
            return base.Channel.GetStudentIDByQuestionID(studentIds, batchCode, questionID);
        }
        
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.StatsData> QuestionWholeStats(int hours) {
            return base.Channel.QuestionWholeStats(hours);
        }
        
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.ErrorQuestion> GetErrorQuestion(out int totalCount, string studentID, int pageSize, int pageIndex, byte subjectId) {
            return base.Channel.GetErrorQuestion(out totalCount, studentID, pageSize, pageIndex, subjectId);
        }
        
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.PaperSymbols> GetPaperMarkSymbols(out string dircetoryName, System.Guid markingResultID) {
            return base.Channel.GetPaperMarkSymbols(out dircetoryName, markingResultID);
        }
        
        public Deyi.Tool.PaperServiceReference.ResultPacket OpenMicrotest(Deyi.Tool.PaperServiceReference.MicroTestUsage mtu) {
            return base.Channel.OpenMicrotest(mtu);
        }
        
        public Deyi.Tool.PaperServiceReference.ResultPacket CloseMicrotest(string batchNo, long classID) {
            return base.Channel.CloseMicrotest(batchNo, classID);
        }
        
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.MicrotestFeed> GetUnderwayMicrotest(out int totalCount, int pageSize, int pageIndex, long id, byte subjectID, bool isTeacher) {
            return base.Channel.GetUnderwayMicrotest(out totalCount, pageSize, pageIndex, id, subjectID, isTeacher);
        }
        
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.MicrotestFeed> GetEndedMicrotest(out int totalCount, int pageSize, int pageIndex, long id, byte subjectID, bool isTeacher) {
            return base.Channel.GetEndedMicrotest(out totalCount, pageSize, pageIndex, id, subjectID, isTeacher);
        }
        
        public System.DateTime GetStartAndEndedTime(out System.DateTime endedTime, string batchNo) {
            return base.Channel.GetStartAndEndedTime(out endedTime, batchNo);
        }
        
        public Deyi.Tool.PaperServiceReference.ResultPacket HandInPaperOnline(Deyi.Tool.PaperServiceReference.MicrotestResult result) {
            return base.Channel.HandInPaperOnline(result);
        }
        
        public bool CheckStudentIsHandIn(out byte totalScore, string batchNo, long studentId) {
            return base.Channel.CheckStudentIsHandIn(out totalScore, batchNo, studentId);
        }
        
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.Statistics> GetMicrotestStatistics(long classID, string batchNo, System.Guid detailId) {
            return base.Channel.GetMicrotestStatistics(classID, batchNo, detailId);
        }
        
        public System.Collections.Generic.List<long> GetStudentByAnswerInMicrotest(string batchNo, long classID, System.Guid detailId, string answer) {
            return base.Channel.GetStudentByAnswerInMicrotest(batchNo, classID, detailId, answer);
        }
        
        public Deyi.Tool.PaperServiceReference.MicrotestResult GetStudentMicrotestResult(string batchNo, long studentId) {
            return base.Channel.GetStudentMicrotestResult(batchNo, studentId);
        }
        
        public System.Collections.Generic.List<Deyi.Tool.PaperServiceReference.AnswerDetail> GetStudentAnswerInMicrotest(string batchNo, long studentId) {
            return base.Channel.GetStudentAnswerInMicrotest(batchNo, studentId);
        }
    }
}
